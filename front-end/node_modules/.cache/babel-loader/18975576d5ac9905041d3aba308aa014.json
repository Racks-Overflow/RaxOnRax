{"ast":null,"code":"// import { createContext, useState } from \"react\";\n// const FavoritesContext = createContext({\n//     favorites: [],\n//     totalFavorites: 0,\n//     addFavorite: (favoriteTrip) =>{},\n//     itemIsFavorite: (tripId) => {},\n//     removeFavorite: (tripId) => {}\n// });\n// export function FavoritesContetProvider(props){\n//     const [userFavorites, setUserFavorites]=useState([]);\n//     function addFavoriteHandler(){\n//         setUserFavorites((prevUserFavorites) => { \n//             return prevUserFavorites.concat(favoriteTrip);\n//         });\n//     }\n//     function removeFavoriteHandler(){\n//         setUserFavorites(prevUserFavorites => {\n//             return prevUserFavorites.filter(trip => trip.id !== tripId);\n//         });\n//     }\n//     function itemIsFavoriteHandler(){\n//         return userFavorites.some(trip => trip.id === tripId);\n//     }\n//     const context ={\n//         favorites: userFavorites,\n//         totaltFavorites: userFavorites.length,\n//         addFavorite: addFavoriteHandler,\n//         removeFavorite: removeFavoriteHandler,\n//         itemIsFavorite: itemIsFavoriteHandler\n//     };\n//     return <FavoritesContext.Provider value={context}>\n// {props.children}\n//     </FavoritesContext.Provider>\n// }\n// export default FavoritesContext;","map":{"version":3,"sources":["/Users/dee/Dev/Apps/RaxOnRax/front-end/src/store/favorite-context.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA","sourcesContent":["// import { createContext, useState } from \"react\";\n\n// const FavoritesContext = createContext({\n//     favorites: [],\n//     totalFavorites: 0,\n//     addFavorite: (favoriteTrip) =>{},\n//     itemIsFavorite: (tripId) => {},\n//     removeFavorite: (tripId) => {}\n// });\n\n// export function FavoritesContetProvider(props){\n//     const [userFavorites, setUserFavorites]=useState([]);\n\n//     function addFavoriteHandler(){\n//         setUserFavorites((prevUserFavorites) => { \n//             return prevUserFavorites.concat(favoriteTrip);\n//         });\n//     }\n\n//     function removeFavoriteHandler(){\n//         setUserFavorites(prevUserFavorites => {\n//             return prevUserFavorites.filter(trip => trip.id !== tripId);\n//         });\n//     }\n\n//     function itemIsFavoriteHandler(){\n//         return userFavorites.some(trip => trip.id === tripId);\n//     }\n\n\n//     const context ={\n//         favorites: userFavorites,\n//         totaltFavorites: userFavorites.length,\n//         addFavorite: addFavoriteHandler,\n//         removeFavorite: removeFavoriteHandler,\n//         itemIsFavorite: itemIsFavoriteHandler\n\n//     };\n\n\n//     return <FavoritesContext.Provider value={context}>\n// {props.children}\n//     </FavoritesContext.Provider>\n// }\n// export default FavoritesContext;"]},"metadata":{},"sourceType":"module"}